stages:
  - deploy
  - publish
  - deploy-2
  - run

build and push images:
  stage: deploy
  only:
    - master
  image: docker:19.03.8
  services:
    - docker:19.03.8-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}:latest || true
  script:
    - docker build --cache-from ${CI_REGISTRY_IMAGE}:latest --target build --tag ${CI_REGISTRY_IMAGE}:latest src
    - docker push ${CI_REGISTRY_IMAGE}:latest
    - docker build --cache-from ${CI_REGISTRY_IMAGE}:latest --target console --tag ${CI_REGISTRY_IMAGE}/console:latest src
    - docker push ${CI_REGISTRY_IMAGE}/console:latest

push packages:
  stage: publish
  only:
    - master
  image: docker:19.03.8
  services:
    - docker:19.03.8-dind
  before_script:
    - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}:latest
  script:
    - docker run -v $(pwd)/.npmrc:/root/.npmrc ${CI_REGISTRY_IMAGE}:latest npm run publish

# NOTE(krishan711): commented out because it keeps failing to find the everypage package to install (always works 2nd time)
# build and push run image:
#   stage: deploy-2
#   only:
#     - master
#   image: docker:19.03.8
#   services:
#     - docker:19.03.8-dind
#   before_script:
#     - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
#     - docker pull ${CI_REGISTRY_IMAGE}/run:latest || true
#   script:
#     - docker build --cache-from ${CI_REGISTRY_IMAGE}/run:latest --tag ${CI_REGISTRY_IMAGE}/run:latest -f src/run.Dockerfile src
#     - docker push ${CI_REGISTRY_IMAGE}/run:latest

build and push builder-api image:
  stage: deploy-2
  only:
    - master
  image: docker:19.03.8
  services:
    - docker:19.03.8-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}/builder-api:latest || true
  script:
    - docker build --cache-from ${CI_REGISTRY_IMAGE}/builder-api:latest --tag ${CI_REGISTRY_IMAGE}/builder-api:latest -f src/builder-api.Dockerfile src
    - docker push ${CI_REGISTRY_IMAGE}/builder-api:latest

run on freebox:
  stage: run
  image: registry.gitlab.com/kibalabs/kiba/docker-images/ssh-able:latest
  variables:
    RUNNABLE_DIRECTORY: "~/deployments/$CI_PROJECT_PATH/$CI_COMMIT_SHORT_SHA"
  script:
    - run-ssh-command "$FREEBOX_SSH_KEY" "$FREEBOX_USER" "$FREEBOX_URL" "
        rm -rf $CI_REPOSITORY_URL $RUNNABLE_DIRECTORY &&
        git clone $CI_REPOSITORY_URL $RUNNABLE_DIRECTORY &&
        cd $RUNNABLE_DIRECTORY &&
        ./run.sh
      "
