stages:
  - deploy
  - publish

# TODO(krish): currently using different tags for each image instead of repos cos gitlab throws an error

build and push base image:
  stage: deploy
  only:
    - master
  image: docker:19.03.8
  services:
    - docker:19.03.8-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}:latest || true
  script:
    # # NOTE(krish): this is the only way i found to get commit count but it always gives 50!
    # - apk update && apk add git
    # - COMMIT_COUNT=$(git rev-list --count HEAD)
    # - echo ${COMMIT_COUNT}
    - docker build --cache-from ${CI_REGISTRY_IMAGE}:latest --target build --tag ${CI_REGISTRY_IMAGE}:latest src # --tag ${CI_REGISTRY_IMAGE}:${COMMIT_COUNT}
    - docker push ${CI_REGISTRY_IMAGE}:latest # ${CI_REGISTRY_IMAGE}:${COMMIT_COUNT}
    - docker build --cache-from ${CI_REGISTRY_IMAGE}:latest --target canvas --tag ${CI_REGISTRY_IMAGE}:canvas src # --tag ${CI_REGISTRY_IMAGE}:${COMMIT_COUNT}
    - docker push ${CI_REGISTRY_IMAGE}:canvas # ${CI_REGISTRY_IMAGE}:${COMMIT_COUNT}
    - docker build --cache-from ${CI_REGISTRY_IMAGE}:latest --target landing --tag ${CI_REGISTRY_IMAGE}:landing src # --tag ${CI_REGISTRY_IMAGE}:${COMMIT_COUNT}
    - docker push ${CI_REGISTRY_IMAGE}:landing # ${CI_REGISTRY_IMAGE}:${COMMIT_COUNT}

build and push packages:
  stage: publish
  image: docker:19.03.8
  services:
    - docker:19.03.8-dind
  before_script:
    - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull ${CI_REGISTRY_IMAGE}:latest
  script:
    - docker run -v $(pwd)/.npmrc:/root/.npmrc ${CI_REGISTRY_IMAGE}:latest npm run publish
